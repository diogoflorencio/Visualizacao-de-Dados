as.data.frame() %>%
mutate(year = "2016")
#gerando a estimativa por meio de bootstrap
estimativa_py_2017 =  bootstrap(py_2017, mean(users)) %>%
CI.percentile(probs = c(.025, .975)) %>%
as.data.frame() %>%
mutate(year = "2017")
#plotando estimativa de popularidade por ano
data.frame(rbind(estimativa_py_2016, estimativa_py_2017)) %>%
ggplot(aes(x = year, ymin = X2.5., ymax = X97.5., color = year)) +
geom_errorbar(width = .2)+
ggtitle("Popularidade de python 2016 - 2017")
# distribuição amostral da popularidade de java com 1000 elementos
dist_popularidade_java = data.frame(dist_popularidade_java = 1:1000) %>%
group_by(dist_popularidade_java) %>%
do(data.frame(media_2016 = sample(java_2016$users, 100) %>% mean(),
media_2017 = sample(java_2017$users, 100) %>% mean()))
# distribuição amostral da popularidade de python com 1000 elementos
dist_popularidade_py = data.frame(dist_popularidade_py = 1:1000) %>%
group_by(dist_popularidade_py) %>%
do(data.frame(media_2016 = sample(py_2016$users, 100) %>% mean(),
media_2017 = sample(py_2017$users, 100) %>% mean()))
#gerando estimativa da diferença de popularidade por meio de bootstrap
dif_popularidade_java =  bootstrap(dist_popularidade_java, mean(media_2016/media_2017)) %>%
CI.percentile(probs = c(.025, .975)) %>%
as.data.frame() %>%
mutate(linguagem = "java")
dif_popularidade_py =  bootstrap(dist_popularidade_py, mean(media_2016/media_2017)) %>%
CI.percentile(probs = c(.025, .975)) %>%
as.data.frame() %>%
mutate(linguagem = "py")
#plotando queda de popularidade por linguagem
data.frame(rbind(dif_popularidade_java, dif_popularidade_py)) %>%
ggplot(aes(x = linguagem, ymin = X2.5., ymax = X97.5., color = linguagem)) +
geom_errorbar(width = .2)+
ggtitle("Diferença de popularidade 2016 - 2017")
java = filter(amostra, file_extension == "java")
py = filter(amostra, file_extension == "py")
popularidade_java_python = data.frame(popularidade_java_python = 1:1000) %>%
group_by(popularidade_java_python) %>%
do(data.frame(media_java = sample(java$users, 100) %>% mean(),
media_py = sample(py$users, 100) %>% mean()))
corr_java_py = bootstrap(popularidade_java_python, cor(media_java, media_py )) %>%
CI.percentile(probs = c(.025, .975)) %>%
as.data.frame() %>%
mutate(corr = "correlação linear")
corr_java_py
#plotando correlação entre a popularidade de java e python
data.frame(cor_pearson) %>%
ggplot(aes(x = corr, ymin = X2.5., ymax = X97.5.), color= "green") +
geom_errorbar(width = .2) +
ggtitle("Correlação de popularidade 2016 - 2017")
#gerando a estimativa por meio de bootstrap
estimativa_java_2016 =  bootstrap(java_2016, median(users)) %>%
CI.percentile(probs = c(.025, .975)) %>%
as.data.frame() %>%
mutate(year = "2016")
#gerando a estimativa por meio de bootstrap
estimativa_java_2017 =  bootstrap(java_2017, median(users)) %>%
CI.percentile(probs = c(.025, .975)) %>%
as.data.frame() %>%
mutate(year = "2017")
#plotando estimativa de popularidade por ano
data.frame(rbind(estimativa_java_2016, estimativa_java_2017)) %>%
ggplot(aes(x = year, ymin = X2.5., ymax = X97.5., color = year)) +
geom_errorbar(width = .2)+
ggtitle("Popularidade de java 2016 - 2017")
#gerando a estimativa por meio de bootstrap
estimativa_py_2016 =  bootstrap(py_2016, median(users)) %>%
CI.percentile(probs = c(.025, .975)) %>%
as.data.frame() %>%
mutate(year = "2016")
#gerando a estimativa por meio de bootstrap
estimativa_py_2017 =  bootstrap(py_2017, median(users)) %>%
CI.percentile(probs = c(.025, .975)) %>%
as.data.frame() %>%
mutate(year = "2017")
#plotando estimativa de popularidade por ano
data.frame(rbind(estimativa_py_2016, estimativa_py_2017)) %>%
ggplot(aes(x = year, ymin = X2.5., ymax = X97.5., color = year)) +
geom_errorbar(width = .2)+
ggtitle("Popularidade de python 2016 - 2017")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(highcharter)
install.packages("lubridate")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(highcharter)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(GGally)
library(lubridate)
library(resample)
library(dplyr)
theme_set(theme_bw())
amostra <- read.csv("../dados/github-users-committing-filetypes.csv")
#formatando data
amostra = amostra %>%
mutate(date = as.Date(paste(month_day,the_month,the_year),format = "%d %m %Y")) %>%
mutate(week_day = (weekdays(as.Date(date))))%>%
select(file_extension, week_day, date, users)
#filtrando dados de interesse
java_2016 = filter(amostra, file_extension == "java",
month(date) %in% c("1","2","3","4"),
year(date) == "2016")
java_2017 = filter(amostra, file_extension == "java",
month(date) %in% c("1","2","3","4"),
year(date) == "2017")
#gerando a estimativa por meio de bootstrap
estimativa_java_2016 =  bootstrap(java_2016, median(users)) %>%
CI.percentile(probs = c(.025, .975)) %>%
as.data.frame() %>%
mutate(year = "2016")
#gerando a estimativa por meio de bootstrap
estimativa_java_2017 =  bootstrap(java_2017, median(users)) %>%
CI.percentile(probs = c(.025, .975)) %>%
as.data.frame() %>%
mutate(year = "2017")
#plotando estimativa de popularidade por ano
data.frame(rbind(estimativa_java_2016, estimativa_java_2017)) %>%
ggplot(aes(x = year, ymin = X2.5., ymax = X97.5., color = year)) +
geom_errorbar(width = .2)+
ggtitle("Popularidade de java 2016 - 2017")
#gerando a estimativa por meio de bootstrap
estimativa_java_2016 =  bootstrap(java_2016, mean(users)) %>%
CI.percentile(probs = c(.025, .975)) %>%
as.data.frame() %>%
mutate(year = "2016")
#gerando a estimativa por meio de bootstrap
estimativa_java_2017 =  bootstrap(java_2017, mean(users)) %>%
CI.percentile(probs = c(.025, .975)) %>%
as.data.frame() %>%
mutate(year = "2017")
#plotando estimativa de popularidade por ano
data.frame(rbind(estimativa_java_2016, estimativa_java_2017)) %>%
ggplot(aes(x = year, ymin = X2.5., ymax = X97.5., color = year)) +
geom_errorbar(width = .2)+
ggtitle("Popularidade de java 2016 - 2017")
View(java_2016)
View(java_2016)
media_2016 = mean(java_2016, users)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(GGally)
library(lubridate)
library(resample)
library(dplyr)
theme_set(theme_bw())
amostra <- read.csv("../dados/github-users-committing-filetypes.csv")
#formatando data
amostra = amostra %>%
mutate(date = as.Date(paste(month_day,the_month,the_year),format = "%d %m %Y")) %>%
mutate(week_day = (weekdays(as.Date(date))))%>%
select(file_extension, week_day, date, users)
#filtrando dados de interesse
java_2016 = filter(amostra, file_extension == "java",
month(date) %in% c("1","2","3","4"),
year(date) == "2016")
java_2017 = filter(amostra, file_extension == "java",
month(date) %in% c("1","2","3","4"),
year(date) == "2017")
ic_java_2016 =  bootstrap(java_2016, mean(users)) %>%
CI.percentile(probs = c(.025, .975)) %>%
as.data.frame() %>%
mutate(year = "2016")
ic_java_2017 =  bootstrap(java_2017, mean(users)) %>%
CI.percentile(probs = c(.025, .975)) %>%
as.data.frame() %>%
mutate(year = "2017")
data.frame(rbind(ic_java_2016, ic_java_2017)) %>%
ggplot(aes(x = year, ymin = X2.5., ymax = X97.5., color = year)) +
geom_errorbar(width = .2)+
ggtitle("Popularidade de java 2016 - 2017")
media_2016 = mean(java_2016, users)
media_2017 = mean(java_2017, users)
media_2016 = mean(java_2016$users)
media_2017 = mean(java_2017$users)
diff_media_observada = diff(media_2016, media_2017)
java = rbind(java_2016,java_2017)
View(java)
View(java)
View(java_2016)
View(java_2016)
java = rbind(java_2016,java_2017) %>%
group_by(year(date) %in% c("2016","2017")) %>%
mean(users)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(GGally)
library(lubridate)
library(resample)
library(dplyr)
theme_set(theme_bw())
amostra <- read.csv("../dados/github-users-committing-filetypes.csv")
#formatando data
amostra = amostra %>%
mutate(date = as.Date(paste(month_day,the_month,the_year),format = "%d %m %Y")) %>%
mutate(week_day = (weekdays(as.Date(date))))%>%
select(file_extension, week_day, date, users)
#filtrando dados de interesse
java_2016 = filter(amostra, file_extension == "java",
month(date) %in% c("1","2","3","4"),
year(date) == "2016")
java_2017 = filter(amostra, file_extension == "java",
month(date) %in% c("1","2","3","4"),
year(date) == "2017")
ic_java_2016 =  bootstrap(java_2016, mean(users)) %>%
CI.percentile(probs = c(.025, .975)) %>%
as.data.frame() %>%
mutate(year = "2016")
ic_java_2017 =  bootstrap(java_2017, mean(users)) %>%
CI.percentile(probs = c(.025, .975)) %>%
as.data.frame() %>%
mutate(year = "2017")
data.frame(rbind(ic_java_2016, ic_java_2017)) %>%
ggplot(aes(x = year, ymin = X2.5., ymax = X97.5., color = year)) +
geom_errorbar(width = .2)+
ggtitle("Popularidade de java 2016 - 2017")
java = rbind(java_2016,java_2017) %>%
group_by(year(date) %in% c("2016","2017")) %>%
mean(users)
diff_media_observada = diff(media_2016, media_2017)
java = rbind(java_2016,java_2017) %>%
group_by(year(date)) %>%
mean(users)
java = filter(amostra, file_extension == "java") %>%
group_by(year(date)) %>%
mean(users)
java = filter(amostra, file_extension == "java")
View(java)
View(java)
java = filter(amostra, file_extension == "java") %>%
group_by(year(date))
View(java)
View(java)
java = filter(amostra, file_extension == "java") %>%
group_by(year(date)) %>%
mean(users)
java = filter(amostra, file_extension == "java") %>%
group_by(year(date)) %>%
summarise(media = mean(users))
View(java)
View(java)
diff_media_observada = diff(java$media)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(GGally)
theme_set(theme_bw())
ratings_raw <- read_csv("dados/ml-latest-small/ratings.csv", col_types = "ccdi")
movies <- read_csv("dados/ml-latest-small/movies.csv", col_types = "ccc")
ratings = full_join(ratings_raw, movies, by = "movieId")
glimpse(ratings)
sw = ratings %>% filter(grepl("Star Wars", title) &
(grepl("Episode IV -", title) |
grepl("Episode I -", title) |
grepl("Episode V -", title)))
sw = ratings %>% filter(grepl("Star Wars", title) &
(grepl("Episode ", title)))
ggplot(sw, aes(y = rating, x = title)) +
stat_summary(fun.data = "mean_cl_boot") +
coord_flip()
nomes_episodios = c("Star Wars: Episode I - The Phantom Menace (1999)",
"", # não usamos
"", # não usamos
"Star Wars: Episode IV - A New Hope (1977)",
"Star Wars: Episode V - The Empire Strikes Back (1980)",
"Star Wars: Episode VI - Return of the Jedi (1983)")
sw5x6 = sw %>%
filter(title %in% c(nomes_episodios[5],
nomes_episodios[6])) %>%
select(title, rating)
sw4x5 = sw %>%
filter(title %in% c(nomes_episodios[4],
nomes_episodios[5])) %>%
select(title, rating)
medias5x6 = sw5x6 %>%
group_by(title) %>%
summarise(media = mean(rating))
medias5x6
diff.media.observada.5x6 = diff(medias5x6$media)
medias4x5 = sw4x5 %>%
group_by(title) %>%
summarise(media = mean(rating))
medias4x5
diff.media.observada.4x5 = diff(medias4x5$media)
set.seed(1)
glimpse(sw5x6)
diffs = replicate(10000, {
medias = sw5x6 %>%
mutate(id_embaralhado = sample(title, n())) %>%
group_by(id_embaralhado) %>%
summarise(media = mean(rating))
e1 = medias %>%
filter(id_embaralhado == nomes_episodios[5])
e4 = medias %>%
filter(id_embaralhado == nomes_episodios[6])
return(e1$media - e4$media)
})
glimpse(diffs)
tibble(diferenca = diffs) %>%
ggplot(aes(x = diferenca)) +
geom_histogram(bins = 30) +
geom_vline(xintercept = diff.media.observada.5x6)
# p-valor!
sum(abs(diffs) >= abs(diff.media.observada.1x4)) / length(diffs)
sum(abs(diffs) >= abs(diff.media.observada.3x4)) / length(diffs)
sum(abs(diffs) >= abs(diff.media.observada.4x5)) / length(diffs)
diffs
abs(diffs)
sum(abs(diffs) >= abs(diff.media.observada.4x5)) / length(diffs)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(GGally)
library(lubridate)
library(resample)
library(dplyr)
theme_set(theme_bw())
amostra <- read.csv("../dados/github-users-committing-filetypes.csv")
#formatando data
amostra = amostra %>%
mutate(date = as.Date(paste(month_day,the_month,the_year),format = "%d %m %Y")) %>%
mutate(week_day = (weekdays(as.Date(date))))%>%
select(file_extension, week_day, date, users)
#filtrando dados de interesse
java_2016 = filter(amostra, file_extension == "java",
month(date) %in% c("1","2","3","4"),
year(date) == "2016")
java_2017 = filter(amostra, file_extension == "java",
month(date) %in% c("1","2","3","4"),
year(date) == "2017")
ic_java_2016 =  bootstrap(java_2016, mean(users)) %>%
CI.percentile(probs = c(.025, .975)) %>%
as.data.frame() %>%
mutate(year = "2016")
ic_java_2017 =  bootstrap(java_2017, mean(users)) %>%
CI.percentile(probs = c(.025, .975)) %>%
as.data.frame() %>%
mutate(year = "2017")
data.frame(rbind(ic_java_2016, ic_java_2017)) %>%
ggplot(aes(x = year, ymin = X2.5., ymax = X97.5., color = year)) +
geom_errorbar(width = .2)+
ggtitle("Popularidade de java 2016 - 2017")
java = filter(amostra, file_extension == "java") %>%
group_by(year(date)) %>%
summarise(media = mean(users))
diff_media_observada = diff(java$media)
set.seed(1)
diffs = replicate(10000, {
medias = filter(amostra, file_extension == "java") %>%
mutate(id_embaralhado = sample(year(date), n())) %>%
group_by(id_embaralhado) %>%
summarise(media = mean(users))
media_2016 = medias %>%
filter(id_embaralhado == "2016")
media_2017 = medias %>%
filter(id_embaralhado == "2017")
return(media_2016$media - media_2016$media)
})
tibble(diferenca = diffs) %>%
ggplot(aes(x = diferenca)) +
geom_histogram(bins = 30) +
geom_vline(xintercept = diff_media_observada, size = 2)
sum(abs(diffs) >= abs(diff_media_observada)) / length(diffs)
sum(abs(diffs) >= abs(diff_media_observada)) / length(diffs)
return(media_2016$media - media_2017$media)
diffs = replicate(10000, {
medias = filter(amostra, file_extension == "java") %>%
mutate(id_embaralhado = sample(year(date), n())) %>%
group_by(id_embaralhado) %>%
summarise(media = mean(users))
media_2016 = medias %>%
filter(id_embaralhado == "2016")
media_2017 = medias %>%
filter(id_embaralhado == "2017")
return(media_2016$media - media_2017$media)
})
sum(abs(diffs) >= abs(diff_media_observada)) / length(diffs)
diffs = replicate(10000, {
medias = filter(amostra, file_extension == "java") %>%
mutate(id_embaralhado = sample(year(date), n())) %>%
group_by(id_embaralhado) %>%
summarise(media = mean(users))
media_2016 = medias %>%
filter(id_embaralhado == "2016")
media_2017 = medias %>%
filter(id_embaralhado == "2017")
media_2016
media_2017
return(media_2016$media - media_2017$media)
})
sum(abs(diffs) >= abs(diff_media_observada)) / length(diffs)
install.packages("dplyr")
setwd("~/Downloads/visualizacao-de-Dados/pos/lab2")
library(tidyverse)
authors <- read.csv("enade_2017_pb.csv")
View(authors)
enade_pb <- read.csv("enade_2017_pb.csv")
View(enade_pb)
enade_pb <- select(enade_pb, QE_I15)
enade_pb <- select(enade_pb, QE_I15, QE_I21)
enade_pb <- read.csv("enade_2017_pb.csv")
enade_pb <- select(enade_pb, QE_I15, QE_I21)
vis1 <- select(enade_pb, QE_I15, QE_I21)
enade_pb <- read.csv("enade_2017_pb.csv")
vis1 <- select(enade_pb, QE_I15, QE_I21)
View(vis1)
vis1 <- select(enade_pb, QE_I15, QE_I21) %>%
group_by(QE_I15) %>%
mutate(perc = 100 * (count(QE_I15)))
vis1 <- select(CO_CATEGAD, enade_pb, QE_I15, QE_I21)
enade_pb <- read.csv("enade_2017_pb.csv")
vis1 <- select(CO_CATEGAD, enade_pb, QE_I15, QE_I21)
View(enade_pb)
vis1 <- select(enade_pb,CO_CATEGAD, enade_pb, QE_I15, QE_I21)
View(vis1)
View(vis1)
vis1 <- enade_pb %> %select(CO_CATEGAD, enade_pb, QE_I15, QE_I21)
vis1 <- enade_pb %>% select(CO_CATEGAD, enade_pb, QE_I15, QE_I21)
enade_pb <- read.csv("enade_2017_pb.csv")
vis1 <- enade_pb %>% select(CO_CATEGAD, enade_pb, QE_I15, QE_I21)
vis1 <- select(enade_pb, CO_CATEGAD, QE_I15, QE_I21)
vis1 <- select(enade_pb, CO_CATEGAD, QE_I15, QE_I21) %>%
group_by(CO_CATEGAD) %>%
summarise(perc = count(QE_I15 == 'A'))
vis1 <- vis1%>%
group_by(CO_CATEGAD) %>%
summarise(perc = count(QE_I15 == 'A'))
vis1 <- vis1%>%
group_by(CO_CATEGAD)
vis1 <- vis1%>%
group_by(CO_CATEGAD) %>%
mutate(perc = count(QE_I15 == 'A'))
vis1 <- vis1%>%
group_by(CO_CATEGAD) %>%
mutate(perc = count(QE_I15))
vis1 <- vis1%>%
group_by(CO_CATEGAD) %>%
mutate(perc = QE_I15)
vis1 <- vis1%>%
count(CO_CATEGAD, QE_I15)
vis1 <- vis1%>%
count(CO_CATEGAD, QE_I15) %>%
group_by(CO_CATEGAD) %>%
mutate(perc = n / sum(n))
vis1 <- vis1%>%
count(CO_CATEGAD, QE_I15) %>%
group_by(CO_CATEGAD) %>%
mutate(perc = n )
vis1 <- vis1%>%
count(CO_CATEGAD, QE_I15) %>%
group_by(CO_CATEGAD) %>%
mutate(percentual = n / sum(n))
vis1 <- vis1%>%
count(CO_CATEGAD, QE_I15) %>%
group_by(CO_CATEGAD) %>%
mutate(percentual = n )
vis1 <- vis1%>%
count(CO_CATEGAD, QE_I15) %>%
ungroup() %>%
group_by(CO_CATEGAD) %>%
mutate(percentual = n )
vis1 <- vis1%>%
count(CO_CATEGAD, QE_I15) %>%
group_by(CO_CATEGAD) %>%
mutate(percentual = n )
vis1 <- vis1%>%
count(CO_CATEGAD, QE_I15) %>%
group_by(CO_CATEGAD) %>%
mutate(percentual = 1)
vis1 %>%
count(CO_CATEGAD, QE_I15) %>%
group_by(CO_CATEGAD)
vis1 %>%
count(CO_CATEGAD, QE_I15)
vis1 <- vis1 %>%
count(CO_CATEGAD, QE_I15) %>%
mutate(percentual = 1)
vis1 <- vis1 %>%
count(CO_CATEGAD, QE_I15) %>%
mutate(percentual = n)
vis1 <- vis1 %>%
group_by(CO_CATEGAD, QE_I15) %>%
summarise(contagem = n())
vis1 <- vis1 %>%
group_by(CO_CATEGAD, QE_I15) %>%
summarise(contagem = n()) %>%
mutate(percentual = contagem / sum(contagem))
vis1 <- vis1 %>%
group_by(CO_CATEGAD, QE_I15) %>%
summarise(contagem = dplyr::n()) %>%
mutate(percentual = contagem / sum(contagem))
vis1 <- select(enade_pb, CO_CATEGAD, QE_I15, QE_I21)
vvv <- vis1 %>%
group_by(CO_CATEGAD, QE_I15) %>%
summarise(contagem = dplyr::n()) %>%
mutate(percentual = contagem / sum(contagem))
vvv
View(vvv)
library(tidyverse)
enade_pb <- read.csv("enade_2017_pb.csv")
enade_pb <- select(enade_pb, CO_CATEGAD, QE_I15, QE_I21)
vis1 <- enade_pb %>%
group_by(CO_CATEGAD, QE_I15) %>%
summarise(contagem = dplyr::n()) %>%
mutate(percentual = contagem / sum(contagem))
vis1
View(vis1)
